API SPEC:
Expected Functionality: 
    Create a sign up option for users. Store each user'saved events.
    Allow the passing of passwords and Session Token and encryption 
    Store the pre gathered free food events in the databse and send it out upon request.
    Finished API.


Request GET /api/
Response: 
    {
    "Hello World"
    }

Request Post /api/
//post a event to the database
post_body: {
        "name": <name of the event>,
        "location": <location of the event>,
        "datetime": <time of the event>,
        "longitude": <longitude of the event>,
        "latitude": <latitude of the event>,
        "content": <content of the event>
}
Response:
{
    "success": True
    "data":{
        "id": <id>,
        "name": <name of the event>,
        "location": <location of the event>,
        "datetime": <time of the event>,
        "longitude": <longitude of the event>,
        "latitude": <latitude of the event>,
        "content": <content of the event>
    }
}

Request POST /register/
//used to register someone. No need for encryption, we handled that
post_body{
    'email': email,
    'password': password
    'username': username
}

Response:
{
    'session_token': user.session_token,
    'session_expiration': exp.time,
    'update_token': user.update_token
}

Request POST /session/ 
//This is to update session when it is expired
post_body:
    header: {
        'Authorization': update_token
    }

Response:
{
    'session_token': user.session_token,
    'session_expiration': exp.time,
    'update_token': user.update_token
}

Request POST /login/
post_body:{
    'email': email,
    'password':password
}

Response:{
    'session_token': user.session_token,
    'session_expiration': str(user.session_expiration),
    'update_token': user.update_token
} //when successfuul, error message otherwise.


Request GET /secret/
//Remember to put session Token on header under Authorization
Response:{
    'message': 'You have successfully implemented sessions.',
    'username': user.username
}



Request GET /api/user/events/
Response:
    {
        "success": True
        "data":{
            "id": <id>,
            "username": <user input for username>,
            "events": <an array of event IDs a person saves>
        }
    }

//use to add an event to a user's list
Request POST /api/user/{id}/events/
post_body: {
    'id': event_id
}
Response:
    {
        "success": True
        "data":{
            "id": <id>,
            "name": <name of the event>,
            "location": <location of the event>,
            "datetime": <time of the event>,
            "longitude": <longitude of the event>,
            "latitude": <latitude of the event>,
            "content": <content of the event>
        }
    }

//used to delete an event of id {id} from a user's List
Request DELETE /api/user/events/{id}/
Response:
    {
        "success": True
        "data":{
            "id": <id>,
            "name": <name of the event>,
            "location": <location of the event>,
            "datetime": <time of the event>,
            "longitude": <longitude of the event>,
            "latitude": <latitude of the event>,
            "content": <content of the event>
        }
    }

//used to delete an event from the database
Request DELETE /api/events/{id}/
Response:
    {
        "success": True
        "data":{
            "id": <id>,
            "name": <name of the event>,
            "location": <location of the event>,
            "datetime": <time of the event>,
            "longitude": <longitude of the event>,
            "latitude": <latitude of the event>,
            "content": <content of the event>
        }
    }

//This is to get the default free food event store in the database
Request GET /api/events/
Response:
    {
        "success": True
        "data":[
            {
                "id": 0,
                "name": <name of the event>,
                "location": <location of the event>,
                "datetime": <time of the event>,
                "longitude": <longitude of the event>,
                "latitude": <latitude of the event>,
                "content": <content of the event>
            },
            {
                "id": 1,
                "name": <name of the event>,
                "location": <location of the event>,
                "datetime": <time of the event>,
                "longitude": <longitude of the event>,
                "latitude": <latitude of the event>,
                "content": <content of the event>
            }
        ]
    }

Request Post /api/events/
//post a series of events to the database
Response: 
post_body: {
        "data":[
            {
                "name": <name of the event>,
                "location": <location of the event>,
                "datetime": <time of the event>,
                "longitude": <longitude of the event>,
                "latitude": <latitude of the event>,
                "content": <content of the event>
            },
            {
                "name": <name of the event>,
                "location": <location of the event>,
                "datetime": <time of the event>,
                "longitude": <longitude of the event>,
                "latitude": <latitude of the event>,
                "content": <content of the event>
            }
        ]
}
Response:
{
    "success": True
        "data":[
            {
                "id": 0,
                "name": <name of the event>,
                "location": <location of the event>,
                "datetime": <time of the event>,
                "longitude": <longitude of the event>,
                "latitude": <latitude of the event>,
                "content": <content of the event>
            },
            {
                "id": 1,
                "name": <name of the event>,
                "location": <location of the event>,
                "datetime": <time of the event>,
                "longitude": <longitude of the event>,
                "latitude": <latitude of the event>,
                "content": <content of the event>
            }
        ]
}

Request Post /api/fromfb/
//post a event in the fbgraph event json form to the database
post_body: {
        "name": <name of the event>,
        "place": {
            "name": <location of the event>,
            "location": {
                "longitude": <longitude of the event>,
                "latitude": <latitude of the event>
            }
        }
        "start_time": <time of the event>,
        "description": <content of the event>
        
}
Response:
{
    "success": True
    "data":{
        "id": <id>,
        "name": <name of the event>,
        "location": <location of the event>,
        "datetime": <time of the event>,
        "longitude": <longitude of the event>,
        "latitude": <latitude of the event>,
        "content": <content of the event>
    }
}



